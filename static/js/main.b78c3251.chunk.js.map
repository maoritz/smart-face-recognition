{"version":3,"sources":["components/Logo/MagicBrainLogo.png","components/Navigation/Navigation.jsx","components/ImageLinkForm/ImageLinkForm.jsx","components/Rank/Rank.jsx","components/Logo/Logo.jsx","components/Singin/Singin.jsx","components/Register/Register.jsx","components/FaceRecognition/FaceRecognition.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","isSignedIn","onRouteChange","style","display","justifyContent","position","onClick","className","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","backgroundColor","Rank","Logo","src","Icon","alt","Signin","id","name","placeholder","value","href","Register","FaceRecognition","imageUrl","box","width","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculateFaceLocation","data","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","height","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b78c3251.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MagicBrainLogo.48866f5b.png\";","import React from \"react\";\r\n\r\nconst Navigation = ({ isSignedIn, onRouteChange }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n        <div style={{ position: \"flex\" }}></div>\r\n        <p\r\n          onClick={() => onRouteChange(\"signout\")}\r\n          className=\"f3 link dim white underline pa3 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n  return (\r\n    <nav style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n      <div style={{ position: \"relative\" }}></div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3 white\">\r\n        {\"This Magic Brain will detect faces in your pictures. Give it a try.\"}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"bg-white center pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4 pa2 w-70 center curveBorderLeft\"\r\n            type=\"tex\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            className=\"w-30 grow f4 link ph3 pv2 dib white curveBorderRight ba b--gray\"\r\n            style={{ backgroundColor: \"#413fa0\" }}\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"white f3 b\"> {\"Maor, your current rank is...\"} </div>\r\n      <div className=\"white f1 b\"> {\"#5\"} </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport Icon from \"./MagicBrainLogo.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"MagicBrain \">\r\n      <img src={Icon} alt=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nconst Signin = ({ onRouteChange }) => {\r\n  return (\r\n    <div className=\"centerItems\">\r\n      <article className=\"br4 w-20 shadow-5 center bg-white formMinWidth\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph3 mh0\">\r\n              <legend className=\"f2 fw6 ph0 mh0\">{<Logo />}</legend>\r\n              <div className=\"mt3 pb3 w5\">\r\n                <input\r\n                  className=\"input100 input-reset purpleBorder\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3 pb2\">\r\n                <input\r\n                  className=\"input100 purpleBorder\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"f8\">\r\n              <input\r\n                onClick={() => onRouteChange(\"home\")}\r\n                className=\" br-pill pa2 input-reset ba grow pointer white dib w5 fw6 f5\"\r\n                style={{ backgroundColor: \"#413fa0\" }}\r\n                type=\"submit\"\r\n                value=\"SIGN IN\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <div className=\"\">\r\n                Don't have an acount?{\" \"}\r\n                <span\r\n                  href=\"#0\"\r\n                  onClick={() => {\r\n                    onRouteChange(\"register\");\r\n                  }}\r\n                  className=\"b link dim black pointer\"\r\n                  style={{ display: \"inline\" }}\r\n                >\r\n                  Register now\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n  return (\r\n    <div className=\"centerItems\">\r\n      {/* ba dark-gray b--black-10 mv6 w-100 w-25-l mw6 */}\r\n      <article className=\"br4 w-20 shadow-5 center bg-white formMinWidth\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure \">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f2 fw6 ph0 mh0\">{<Logo />}</legend>\r\n              <div className=\"mt3 pb3 w5\">\r\n                <input\r\n                  className=\"input-reset input100 purpleBorder\"\r\n                  type=\"email\"\r\n                  id=\"name\"\r\n                  placeholder=\"Name\"\r\n                />\r\n              </div>\r\n              <div className=\"mt3 pb3\">\r\n                <input\r\n                  className=\"input-reset input100 purpleBorder\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3 pb3\">\r\n                <input\r\n                  className=\"input-reset input100 purpleBorder\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={() => onRouteChange(\"home\")}\r\n                className=\"br-pill pa2 input-reset ba grow pointer white f4 dib w-100 fw6 f5\"\r\n                type=\"submit\"\r\n                style={{ backgroundColor: \"#413fa0\" }}\r\n                value=\"CREATE ACCOUNT\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3 rubikRegular\">\r\n              Already have an acount?{\" \"}\r\n              <span\r\n                href=\"#0\"\r\n                onClick={() => {\r\n                  onRouteChange(\"signin\");\r\n                }}\r\n                className=\"b link dim black pointer\"\r\n                style={{ display: \"inline\" }}\r\n              >\r\n                Log in\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img id=\"inputimage\" alt=\"\" src={imageUrl} width=\"500px\" heigh=\"auto\" />\r\n        <div\r\n          className=\"bounding-box\"\r\n          style={{\r\n            top: box.topRow,\r\n            right: box.rightCol,\r\n            bottom: box.bottomRow,\r\n            left: box.leftCol,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport Signin from \"./components/Singin/Singin\";\nimport Register from \"./components/Register/Register\";\nimport Particles from \"react-particles-js\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Clarifai from \"clarifai\";\nimport \"./App.css\";\n\nconst app = new Clarifai.App({\n  apiKey: \"58a6e5300873423c868961a41dbe2a15\",\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false,\n    };\n  }\n\n  calculateFaceLocation = (data) => {\n    console.log(data);\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(clarifaiFace);\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        // URL\n        this.state.input\n      )\n      .then((response) =>\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ isSignedIn: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n\n        {route === \"home\" ? (\n          <div>\n            <div className=\"pa4\"></div>\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register onRouteChange={this.onRouteChange} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}